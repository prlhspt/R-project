ggplot(data=df_mpg, aes(x=drv,  y=mean_cty))+geom_col()+coord_flip()+ylab()
install.packages("plotly")
install.packages("plotly")
library(plotly)
library(plotly)
install.packages("plotly")
ggplot(data=mpg, aes(x=displ, y=hwy)) + geom_point()
library(ggplot2)
library(ggplot)
ggplot(data=df_mpg, aes(x=reorder(drv, mean_cty),  y=mean_cty))+geom_col(fill=rainbow(3))+coord_flip()+
ylab("도시연비비")+xlab('구동시간')
ggplotly(tt)
ggplot(data=mpg, aes(x=displ, y=hwy)) + geom_point()
install.packages("plotly")
install.packages("plotly")
install.packages(c("backports", "openssl", "processx"))
install.packages("plotly")
install.packages("plotly")
library(plotly)
install.packages("plotly")
library(plotly)
ggplot(data = mpg, aes(x = displ, y = hwy))+geom_point()+xlim(3, 6)+ylim(10, 20)
midwest=as.data.frame(ggplot2::midwest)
midwest
ggplot(data=midwest.aes(x=poptotal, y=popasian))+geom_point()
ggplot(data=midwest, aes(x=poptotal, y=popasian))+geom_point()
ggplot(data=midwest, aes(x=poptotal, y=popasian))+geom_point()+xlim(0, 5000000)+ylim(0, 10000)
kk=table(mpg$class)
tt=barplot(kk, col=rainbow(8), ylim=c(0, 70))
text(tt, kk, paste0(kk, "대"), pos=3, col=2, cex2)
text(tt, kk, paste0(kk, "대"), pos=3, col=2, cex=2)
text(tt, kk, paste(kk, "대"), pos=3, col=2, cex=2)
text(tt, kk, paste0(kk, "대"), pos=3, col=2, cex=2)
kk=table(mpg$class)
tt=barplot(kk, col=rainbow(8), ylim=c(0, 70))
text(tt, kk, paste(kk, "대"), pos=3, col=2, cex=2)
text(tt, kk, paste0(kk, "대"), pos=3, col=2, cex=2)
tt=barplot(kk, col=rainbow(8), ylim=c(0, 70))
text(tt, kk, paste0(kk, "대"), pos=3, col=2, cex=2)
mpg %>%
filter(class=="suv")
library(ggplot2)
library(dplyr)
mpg %>%
filter(class=="suv")
mpg %>%
filter(class=="suv")
install.packages("plotly")
library(plotly)
install.packages("plotly")
library(ggplot2)
library(plotly)
install.packages("Rtools")
install.packages("plotly")
library(plotly)
setwd("D:/R-workspace/Rdata")
data(package="gglot2")
data(package="gglot2")
install.packages(gglot2)
install.packages("gglot2")
data(package="gglot2")
install.packages("ggplot2")
data(package="gglot2")
df$results
df = data(package="gglot2")
install.packages("gglot2")
install.packages("ggplot2")
df = data(package="ggplot2")
df$results
mpg = as.data.frame(ggplot2::mpg)
head(mpg)
table(mpg$drv)
library(dplyr)
mpg %>%
grop_by(drv) %>%
summarise(mean_cty=mean(cty))
mpg %>%
group_by(drv) %>%
summarise(mean_cty=mean(cty))
df_g=mpg %>%
group_by(drv) %>%
summarise(mean_cty=mean(cty))
df_g
ggplot(data=df_g, aes(x=drv, y=mean_cty))
library(ggplot2)
ggplot(data=df_g, aes(x=drv, y=mean_cty))
ggplot(data=df_g, aes(x=drv, y=mean_cty))+
geom_col(fill=rainbow(3))
ggplot(data=df_g, aes(x=drv, y=mean_cty))+
geom_col(fill=c('red', 'blue', 'orange'))
ggplot(data=df_g, aes(x=drv, y=mean_cty))+
geom_col(fill=c('red', 'blue', 'orange'))+
gem_text(aes(label=df_g$mean_cty), vjust=-0.2)
ggplot(data=df_g, aes(x=drv, y=mean_cty))+
geom_col(fill=c('red', 'blue', 'orange'))+
geom_text(aes(label=df_g$mean_cty), vjust=-0.2)
ggplot(data=df_g, aes(x=drv, y=mean_cty))+
geom_col(fill=c('red', 'blue', 'orange'))+
geom_text(aes(label=df_g$mean_cty), vjust=-0.2, col='red')
ggplot(data=df_g, aes(x=drv, y=mean_cty))+
geom_col(fill=c('red', 'blue', 'orange'))+
geom_text(aes(label=mean_cty), vjust=-0.2, col='red')
df_g=mpg %>%
group_by(drv) %>%
summarise(mean_cty=mean(cty), 1)
df_g
ggplot(data=df_g, aes(x=drv, y=mean_cty))+
geom_col(fill=c('red', 'blue', 'orange'))+
geom_text(aes(label=mean_cty), vjust=-0.2, col='red')
ggplot(data=df_g, aes(x=drv, y=mean_cty))+
geom_col(fill=c('red', 'blue', 'orange'))+
geom_text(aes(label=mean_cty), vjust=-0.2, col='red')+
coord_flip()
ggplot(data=df_g, aes(x=drv, y=mean_cty))+
geom_col(fill=c('red', 'blue', 'orange'))+
geom_text(aes(label=mean_cty), vjust=-0.2, col='red')+
coord_flip()+xlab="구동타입"+ylab("도시연비비")
ggplot(data=df_g, aes(x=drv, y=mean_cty))+
geom_col(fill=c('red', 'blue', 'orange'))+
geom_text(aes(label=mean_cty), vjust=-0.2, col='red')+
coord_flip()+xlab("구동타입")+ylab("도시연비비")
# Seed
runif(3)
rnorm(3)
rnorm(3, mean=0, sd=1)
set.seed(1234)
runif(15)
# Seed
runif(3)
# Seed
runif(3)
# Seed
runif(3)
# Seed
runif(3)
rnorm(3, mean=0, sd=1)
rnorm(3, mean=0, sd=1)
rnorm(3, mean=0, sd=1)
set.seed(1234)
runif(15)
runif(15)
runif(15)
set.seed(1234)
runif(15)
set.seed(1234)
runif(15)
set.seed(1234)
runif(15)
knitr::opts_chunk$set(echo = TRUE)
```{r pressure, echo=FALSE}
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
lines(density(x), type='h', col='red')
lines(density(x), type='h', col='red')
grad=sample(0:100, 80, replace=Y)
grad=sample(0:100, 80, replace=T)
x=rnorm(100)
hist(x, probability = T)
lines(density)
lines(density(x), type='h', col='red')
lines(density)
hist(x, probability = T)
lines(density)
lines(density(x), type='h', col='red')
x=rnorm(100)
hist(x, probability = T)
lines(density)
```{r}
grad=sample(0:100, 80, replace=T)
grad=sample(0:100, 80, replace=T)
lines(density(x), type='h', col='red')
x=rnorm(100)
hist(x, probability = T)
lines(density(x), type='h', col='red')
library(ggplot2)
x=rnorm(100)
hist(x, probability = T)
lines(density(x), type='h', col='red')
lines(density(x), type='h', col='red')
library(ggplot)
x=rnorm(100)
hist(x, probability = T)
lines(density(x), type='h', col='red')
plot(grade, col = ifelse(grade>=60, 2, 5), pch=ifelse(grad>=60, 10, 15))
grad=sample(0:100, 80, replace=T)
plot(grade, col = ifelse(grade>=60, 2, 5), pch=ifelse(grad>=60, 10, 15))
abline(h=60, col=2, lwd=2)
sapiro.test(x)
shapiro.test(x)
setwd("c:/R-Workspace/Rdata")
setwd("D:/R-Workspace/Rdata")
library(dplyr)
install.pacakges("ggmap")
install.packages("ggmap")
library(ggmap)
library(stringr)
library(rvest)
register_google(key="AIzaSyCcHwEAt_eIkxdA_qNS-rPwUc8WjBzlZN8")
get_map(location = "청주",
zoom = 15,
maptype = 'roadmap',# hybrid.satellite, terrian,...
source='google')
ggmap()
ggmap(tt)
tt=get_map(location = "청주",
zoom = 15,
maptype = 'roadmap',# hybrid.satellite, terrian,...
source='google')
ggmap(tt)
tt=get_map(location = "청주",
zoom = 15,
maptype = 'roadmap',# hybrid.satellite, terrian,...
maptype = 'satellite',
source='google')
tt=get_map(location = "청주",
zoom = 15,
maptype = 'satellite',# hybrid.satellite, terrian,...
source='google')
ggmap(tt)
frame()
geocodeQueryCheck()
geocodeQueryCheck()
geocode(location = '청주',
output='latlon',
source='google')
geocode(location = enc2utf8(x= "청주"),
output='latlon',
source='google')
geocode(location = enc2utf8(x= "청주$language=ko"),
output='latlon',
source='google')
myloc=geocode(location = enc2utf8(x= "청주$language=ko"),
output='latlon',
source='google')
myloc
center=c(myloc$lon.myloc$lat)
maptype='hybrid',
source='google')+
goem_point(data=myloc,
mapping=aes(x=lon, y=lat),
sharp='*',
color='red',
stroke=18, size=10)
maptype='hybrid',
source='google')+
geom_point(data=myloc,
mapping=aes(x=lon, y=lat),
sharp='*',
color='red',
stroke=18, size=10)
qmap(location = center,
zoom=18
maptype='hybrid',
source='google')+
geom_point(data=myloc,
mapping=aes(x=lon, y=lat),
sharp='*',
color='red',
stroke=18, size=10)
univ
kk=Filter(function(x){ncahr(x)>=5}, univ)
kk=univ %>%
data.frame()
#str_detect(df, pattern='대학교')
univ=ifelse(str_detect((df, pattern='대학교'),))
#str_detect(df, pattern='대학교')
univ=ifelse(str_detect((df, pattern='대학교')))
library(rvest)
library(dplyr)
title=c()
title=c()
grade=c()
time=c()
t_css=".color_b"
gr_css=".list_netizen_score em"
pt_css=".title+ .num"
base_url="https://movie.naver.com/movie/point/af/list.nhn?&page="
cr_url=paste0(base_url, 1)
hdoc=read_html(cr_url, encoding="CP949")
cr_url=paste0(base_url, 1)
hdoc=read_html(cr_url, encoding="CP949")
n_title=html_nodes(hodc, t_css)
n_gr=html_nodes(hdoc, gr_css)
n_title=html_nodes(hdoc, t_css)
n_gr=html_nodes(hdoc, gr_css)
n_pt=html_nodes(hodc, gt_css)
n_pt=html_nodes(hdoc, gt_css)
n_pt=html_nodes(hdoc, ptt_css)
n_pt=html_nodes(hdoc, pt_css)
title_part=html_text(n_title)
grad_part=html_text(n_gr)
grade_part
grade_part=html_text(n_gr)
grade_part
title=c(title, title_part)
grade=c(grade, grade_part)
time=c(time, time_part)
time_part=str_sub(pt_part, -8)
pt_part=html_text(n_pt)
time_part=str_sub(pt_part, -8)
title=c(title, title_part)
grade=c(grade, grade_part)
time=c(time, time_part)
for i in 1:1000{
cr_url=paste0(base_url, 1)
hdoc=read_html(cr_url, encoding="CP949")
n_title=html_nodes(hdoc, t_css)
n_gr=html_nodes(hdoc, gr_css)
n_pt=html_nodes(hdoc, pt_css)
title_part=html_text(n_title)
grade_part=html_text(n_gr)
grade_part
pt_part=html_text(n_pt)
time_part=str_sub(pt_part, -8)
title=c(title, title_part)
grade=c(grade, grade_part)
time=c(time, time_part)
};
for i in 1:1000{
cr_url=paste0(base_url, 1)
hdoc=read_html(cr_url, encoding="CP949")
n_title=html_nodes(hdoc, t_css)
n_gr=html_nodes(hdoc, gr_css)
n_pt=html_nodes(hdoc, pt_css)
title_part=html_text(n_title)
grade_part=html_text(n_gr)
grade_part
pt_part=html_text(n_pt)
time_part=str_sub(pt_part, -8)
title=c(title, title_part)
grade=c(grade, grade_part)
time=c(time, time_part)
}
for i in 1:1000{
cr_url=paste0(base_url, i)
hdoc=read_html(cr_url, encoding="CP949")
n_title=html_nodes(hdoc, t_css)
n_gr=html_nodes(hdoc, gr_css)
n_pt=html_nodes(hdoc, pt_css)
title_part=html_text(n_title)
grade_part=html_text(n_gr)
grade_part
pt_part=html_text(n_pt)
time_part=str_sub(pt_part, -8)
title=c(title, title_part)
grade=c(grade, grade_part)
time=c(time, time_part)
}
for i in 1:1000{
cr_url=paste0(base_url, i)
hdoc=read_html(cr_url, encoding="CP949")
n_title=html_nodes(hdoc, t_css)
n_gr=html_nodes(hdoc, gr_css)
n_pt=html_nodes(hdoc, pt_css)
title_part=html_text(n_title)
grade_part=html_text(n_gr)
grade_part
pt_part=html_text(n_pt)
time_part=str_sub(pt_part, -8)
title=c(title, title_part)
grade=c(grade, grade_part)
time=c(time, time_part)
}
for i in 1:1000{
cr_url=paste0(base_url, i)
hdoc=read_html(cr_url, encoding="CP949")
n_title=html_nodes(hdoc, t_css)
n_gr=html_nodes(hdoc, gr_css)
n_pt=html_nodes(hdoc, pt_css)
title_part=html_text(n_title)
grade_part=html_text(n_gr)
grade_part
pt_part=html_text(n_pt)
time_part=str_sub(pt_part, -8)
title=c(title, title_part)
grade=c(grade, grade_part)
time=c(time, time_part)
}
for(i in 1:1000){
cr_url=paste0(base_url, i)
hdoc=read_html(cr_url, encoding="CP949")
n_title=html_nodes(hdoc, t_css)
n_gr=html_nodes(hdoc, gr_css)
n_pt=html_nodes(hdoc, pt_css)
title_part=html_text(n_title)
grade_part=html_text(n_gr)
grade_part
pt_part=html_text(n_pt)
time_part=str_sub(pt_part, -8)
title=c(title, title_part)
grade=c(grade, grade_part)
time=c(time, time_part)
}
movie=data.frame(title, grade, time)
View(movie)
write.csv(movie, "movie.csv")
data=read.csv("movie.csv")
head(data)
data %>%
select(title, grade) %>%
group_by(title) %>%
summarise(total=sum(grade),
count=n()) %>%
arrange(desc(total), desc(count)) %>%
head(10)
top10_A
ggplot(data=top10_A,aes(x=title, y=total))+
geom_col(fill='red')+
geom_text
ggplot(data=top10_A,aes(x=title, y=total))+
geom_col(fill='red')+
geom_text(aes(label=top10_A$total), vjust=-0.2, col='blue')
ggplot(data=top10_A,aes(x=title, y=total))+
geom_col(fill='red')+
geom_text(aes(label=top10_A$total), vjust=-0.2, col='blue')
movie=data.frame(title, grade, time)
movie=data.frame(title, grade, time)
View(movie)
View(movie)
View(movie)
for(i in 1:10){
cr_url=paste0(base_url, i)
hdoc=read_html(cr_url, encoding="CP949")
n_title=html_nodes(hdoc, t_css)
n_gr=html_nodes(hdoc, gr_css)
n_pt=html_nodes(hdoc, pt_css)
title_part=html_text(n_title)
grade_part=html_text(n_gr)
grade_part
pt_part=html_text(n_pt)
time_part=str_sub(pt_part, -8)
title=c(title, title_part)
grade=c(grade, grade_part)
time=c(time, time_part)
}
movie=data.frame(title, grade, time)
title=c()
grade=c()
time=c()
t_css=".color_b"
gr_css=".list_netizen_score em"
pt_css=".title+ .num"
base_url="https://movie.naver.com/movie/point/af/list.nhn?&page="
for(i in 1:10){
cr_url=paste0(base_url, i)
hdoc=read_html(cr_url, encoding="CP949")
n_title=html_nodes(hdoc, t_css)
n_gr=html_nodes(hdoc, gr_css)
n_pt=html_nodes(hdoc, pt_css)
title_part=html_text(n_title)
grade_part=html_text(n_gr)
grade_part
pt_part=html_text(n_pt)
time_part=str_sub(pt_part, -8)
title=c(title, title_part)
grade=c(grade, grade_part)
time=c(time, time_part)
}
movie=data.frame(title, grade, time)
View(movie)
write.csv(movie, "movie.csv")
data=read.csv("movie.csv")
head(data)
data %>%
select(title, grade) %>%
group_by(title) %>%
summarise(total=sum(grade),
count=n()) %>%
arrange(desc(total), desc(count)) %>%
head(10)
top10_A
ggplot(data=top10_A,aes(x=title, y=total))+
geom_col(fill='red')+
geom_text(aes(label=top10_A$total), vjust=-0.2, col='blue')
top10_A
top10_A = data %>%
select(title, grade) %>%
group_by(title) %>%
summarise(total=sum(grade),
count=n()) %>%
arrange(desc(total), desc(count)) %>%
head(10)
top10_A
ggplot(data=top10_A,aes(x=title, y=total))+
geom_col(fill='red')+
geom_text(aes(label=top10_A$total), vjust=-0.2, col='blue')
setwd("c:/R-Workspace/Rdata")
setwd("D:/R-Workspace/Rdata")
View(attributes)
View(attitude)
cor, test(attitude$rating, attitudes$complatins)
cov(attitude)
cor(attitude)
with(attitude, cor.test(rating, complatins))
cor, test(attitude$rating, attitudes$complatins)
with(attitude, cor.test(attitude$rating, attitude$complatins))
View(attitude)
cov(attitude)
cor(attitude)
with(attitude, cor.test(attitude$rating, attitude$complatins))
cor, test(attitude$rating, attitudes$complatins)
fasu=data.frame(fa, su)
fasu
data=read.csv("cars.csv")
data
out=lm(dist~speed, data=data)
summary(out)
data=read.csv("programming.csv")
head(data)
out=lm(salary~experience+score, data=data)
