<<<<<<< HEAD
df_mpg
# Q3.
df_mpg = mpg %>%
filter(!is.na(drv)& !is.na(cty)) %>%
group_by(drv) %>%
summarise(mean_cty = mean(cty))
mpg <- as.data.frame(ggplot2::mpg)
# Q3.
df_mpg = mpg %>%
filter(!is.na(drv)& !is.na(cty)) %>%
group_by(drv) %>%
summarise(mean_cty = mean(cty))
library(plotly)
library(ggplot2)
library(dplyr)
# Q3.
df_mpg = mpg %>%
filter(!is.na(drv)& !is.na(cty)) %>%
group_by(drv) %>%
summarise(mean_cty = mean(cty))
tt = ggplot(data=df_mpg, aes(x=reorder(drv, -mean_cty), y=mean_cty))+
geom_col(fill=rainbow(3))+coord_flip()
ggplotly(tt)
library(plotly)
install.packages("plotly")
library(plotly)
library(ggplot2)
tt = ggplot(data=df_mpg, aes(x=reorder(drv, -mean_cty), y=mean_cty))+
geom_col(fill=rainbow(3))+coord_flip()
ggplotly(tt)
df_mpg
tt = ggplot(data=df_mpg, aes(x=reorder(drv, -mean_cty), y=mean_cty))+
geom_col(fill=rainbow(3))+coord_flip()
ggplotly(tt)
library(plotly)
install.packages("plotly")
library(plotly)
library(gglot2)
library(ggplot2)
library(plotly)
library(ggplot2)
tt = ggplot(data=df_mpg, aes(x=reorder(drv, -mean_cty), y=mean_cty))+
geom_col(fill=rainbow(3))+coord_flip()
ggplotly(tt)
df_mpg
ggplot(data=df_mpg.aes())
ggplot(data=df_mpg.aes(x=drv,  y=mean_cty))+geom_col()
ggplot(data=df_mpg, aes(x=drv,  y=mean_cty))+geom_col()
ggplot(data=df_mpg, aes(x=drv,  y=mean_cty))+geom_col()+coord_flip()+
ylab("도시연비비")+xlab('구동시간')
ggplot(data=df_mpg, aes(x=drv,  y=mean_cty))+geom_col(fill=rainbow(3))+coord_flip()+
ylab("도시연비비")+xlab('구동시간')
ggplot(data=df_mpg, aes(x=reorder(drv_mean_cty),  y=mean_cty))+geom_col(fill=rainbow(3))+coord_flip()+
ylab("도시연비비")+xlab('구동시간')
ggplot(data=df_mpg, aes(x=reorder(drv.mean_cty),  y=mean_cty))+geom_col(fill=rainbow(3))+coord_flip()+
ylab("도시연비비")+xlab('구동시간')
ggplot(data=df_mpg, aes(x=reorder(drv, mean_cty),  y=mean_cty))+geom_col(fill=rainbow(3))+coord_flip()+
ylab("도시연비비")+xlab('구동시간')
install.packages("plotly")
library(plotly)
install.packages("plotly")
ggplotly(tt)
mpg <- as.data.frame(ggplot2::mpg)
mpg[c(65, 124, 131, 153, 212), "hwy"] <- NA
mpg
library(dplyr)
library(ggplot2)
# Q1.
table(is.na(mpg))
table(is.na(mpg$drv))
table(is.na(mpg$hwy))
# Q2.
mpg %>%
group_by(drv) %>%
filter(!is.na(hwy)) %>%
summarise(mean(hwy, ns.na=T))
# Q1.
mpg <- as.data.frame(ggplot2::mpg)                  # mpg 데이터 불러오기
mpg[c(10, 14, 58, 93), "drv"] <- "k"                # drv 이상치 할당
mpg[c(29, 43, 129, 203), "cty"] <- c(3, 4, 39, 42)  # cty 이상치 할당
table(is.na(mpg))
mpg$drv <- ifelse(mpg$drv %in% c(4, "f", "r"), mpg$drv, NA)
# Q2.
boxplot(mpg$cty)$stats
mpg$cty <- ifelse(mpg$cty < 10 | mpg$cty>25,NA, mpg$cty)
table(is.na(mpg$cty))
boxplot(mpg$cty)$stats
# Q3.
df_mpg = mpg %>%
filter(!is.na(drv)& !is.na(cty)) %>%
group_by(drv) %>%
summarise(mean_cty = mean(cty))
df_mpg
install.packages("plotly")
library(plotly)
library(ggplot2)
tt = ggplot(data=df_mpg, aes(x=reorder(drv, -mean_cty), y=mean_cty))+
geom_col(fill=rainbow(3))+coord_flip()
library(ggplot2)
library(ggplot2)
library(plotly)
library(plotly)
library(plotly)
library(plotly)
library(plotly)
library(plotly)
library(plotly)
library(ggplot2)
tt = ggplot(data=df_mpg, aes(x=reorder(drv, -mean_cty), y=mean_cty))+
geom_col(fill=rainbow(3))+coord_flip()
ggplotly(tt)
df_mpg
ggplot(data=df_mpg, aes(x=drv,  y=mean_cty))+geom_col()+coord_flip()+ylab()
install.packages("plotly")
install.packages("plotly")
library(plotly)
library(plotly)
install.packages("plotly")
ggplot(data=mpg, aes(x=displ, y=hwy)) + geom_point()
library(ggplot2)
library(ggplot)
ggplot(data=df_mpg, aes(x=reorder(drv, mean_cty),  y=mean_cty))+geom_col(fill=rainbow(3))+coord_flip()+
ylab("도시연비비")+xlab('구동시간')
ggplotly(tt)
ggplot(data=mpg, aes(x=displ, y=hwy)) + geom_point()
install.packages("plotly")
install.packages("plotly")
install.packages(c("backports", "openssl", "processx"))
install.packages("plotly")
install.packages("plotly")
library(plotly)
install.packages("plotly")
library(plotly)
ggplot(data = mpg, aes(x = displ, y = hwy))+geom_point()+xlim(3, 6)+ylim(10, 20)
midwest=as.data.frame(ggplot2::midwest)
midwest
ggplot(data=midwest.aes(x=poptotal, y=popasian))+geom_point()
ggplot(data=midwest, aes(x=poptotal, y=popasian))+geom_point()
ggplot(data=midwest, aes(x=poptotal, y=popasian))+geom_point()+xlim(0, 5000000)+ylim(0, 10000)
kk=table(mpg$class)
tt=barplot(kk, col=rainbow(8), ylim=c(0, 70))
text(tt, kk, paste0(kk, "대"), pos=3, col=2, cex2)
text(tt, kk, paste0(kk, "대"), pos=3, col=2, cex=2)
text(tt, kk, paste(kk, "대"), pos=3, col=2, cex=2)
text(tt, kk, paste0(kk, "대"), pos=3, col=2, cex=2)
kk=table(mpg$class)
tt=barplot(kk, col=rainbow(8), ylim=c(0, 70))
text(tt, kk, paste(kk, "대"), pos=3, col=2, cex=2)
text(tt, kk, paste0(kk, "대"), pos=3, col=2, cex=2)
tt=barplot(kk, col=rainbow(8), ylim=c(0, 70))
text(tt, kk, paste0(kk, "대"), pos=3, col=2, cex=2)
mpg %>%
filter(class=="suv")
library(ggplot2)
library(dplyr)
mpg %>%
filter(class=="suv")
mpg %>%
filter(class=="suv")
install.packages("plotly")
library(plotly)
install.packages("plotly")
library(ggplot2)
library(plotly)
install.packages("Rtools")
install.packages("plotly")
library(plotly)
education=read.csv("http://datasets.flowingdata.com/education.csv")
head(education)
library(lattice)
parallel(education[2:7], horizontal.axis=FALSE)
parallel(education[2:7], horizontal.axis=FALSE, col=1)
summary(education$rading)
summary(education$reading)
color=education$reading
parallel(education[,2:7], horizontal, axis=False, col=color+1)
summary(education$dropout_rate)
summary(education$dropout_rate)
parallel(education[,2:7], horizontal, axis=False, col=color+1)
color=education$dropout_rate>5.3
color
data=dread.csv(("20140528_baseball.csv"))
data=read.csv(("20140528_baseball.csv"))
setwd("D:/workspace/r)
View(attitude)
cov(attitude)
cor(attitude)
with(attitude, cor.test(attitude$rating, attitude$complatins))
cor= test(attitude$rating, attitudes$complatins)
=======
install.packages("multilinguer")
library(multilinguer)
install_jdk()
install.packages(c('stringr', 'hash', 'tau', 'Sejong', 'RSQLite', 'devtools'),
type = "binary")
install.packages('rJava', type = 'binary');library(rJava);.jinit();rstudioapi::restartSession()
library(multilinguer)
install_jdk()
setwd("C:/Users/LimHyunSeok/Documents/workspace/R-project/Rdata")
View(attitude)
cov(attitude)
cor(attitude)
with(attitude,cor.test(rating, complaints))
cor(attitude)
with(attitude,cor.test(rating, complaints))
cor.test(attitude$rating,attitude$complaints)
plot(attitude$rating,attitude$complaints)
fa=c(150,160,170,180,190)
su=c(176,179,182,178,185)
fasu=data.frame(fa,su)
fasu
lm(su~fa,data=fasu)
>>>>>>> 9f4c339159e106f9b0322d8915e9e511b08406b0
data=read.csv("cars.csv")
data
out=lm(dist~speed,data=data)
summary(out)
plot(dist~speed,data=cars,col="blue")
abline(out,col="red")
out1=lm(dist~speed+0,data=data)
summary(lm(dist~speed+0,data=data))
plot(out1)
data=read.csv("cars.csv")
data
out=lm(dist~speed,data=data)
summary(out)
plot(dist~speed,data=cars,col="blue")
abline(out,col="red")
out1=lm(dist~speed+0,data=data)
summary(lm(dist~speed+0,data=data))
plot(out1)
summary(lm(dist~speed+0,data=data))
plot(out1)
shapiro.test(sqrt(data$dist))
out3=lm(sqrt(dist)~speed+0,data=data)
summary(out3)
plot(out3)
cbind(new$speed,predict(out3,new,interval = "prediction"))
#다중회귀분석
data=read.csv("salary.csv")
head(data)
<<<<<<< HEAD
out=lm(salary~experience+score, data=data)
education=read.csv("http://datasets.flowingdata.com/education.csv")
head(education)
library(lattice)
parallel(education[2:7], horizontal.axis=FALSE, col=1)
summary(education$reading)
color=education$reading
parallel(education[,2:7], horizontal, axis=False, col=color+1)
summary(education$dropout_rate)
color=education$dropout_rate>5.3
color
data=read.csv(("20140528_baseball.csv"))
setwd("D:/workspace/r")
data=read.csv(("20140528_baseball.csv"))
data=read.csv("20140528_baseball.csv")
setwd("D:/workspace/r")
setwd("D:/workspace/r/Rdata")
data=read.csv("20140528_baseball.csv")
head(data)
model=prcomp(data[,2:6], scale=T)
model
summary(model)
plot(model)
mdeol=prcomp(data[,2:6], scale=T)
head(data)
rownames(data)=data[,1]
head(data)
stars(data[,2:6])
stars(data[,2:6], flip.labels = F.key.loc=c(9,2 ))
stars(data[,2:6], flip.labels = F, key.loc=c(9, 2))
faces(data[,2:6])
faces(data[,2:6])
library(aplpack)
install.packages("aplpack")
library(aplpack)
#2.
bb2013=read.csv("213_baseball.csv")
head(bb2013)
#2.
bb2013=read.csv("213_baseball.csv")
#2.
bb2013=read.csv("213_baseball.csv")
#2.
bb2013=read.csv("2013_baseball.csv")
head(bb2013)
library(aplpack)
faces(data[,2:6])
position=bb2013$포지션
head(position)
base2_pos = bb2013[, c(2, 4:11)]
base2_pos = aggregate(base2_pos[, :9], by = list(포지션=base2_pos$포지션), sum)
head(base2_pos2)
base2_pos2 = aggregate(base2_pos[, :9], by = list(포지션=base2_pos$포지션), sum)
head(base2_pos2)
base2_pos2 = aggregate(base2_pos[, :9], by = list(포지션=base2_pos$포지션), sum)
base2_pos2 = aggregate(base2_pos[, 2:9], by = list(포지션=base2_pos$포지션), sum)
head(base2_pos2)
head(base2_pos2)
head(base2_pos2) = base2_pos2[, 1]
rownames(base2_pos2) = base2_pos2[, 1]
head(base2_pos2)
library(lattice)
parallel(base2_pos2)
parallel(base2_pos2[,  2:9], horizontal.axis=F, col=1)
# 팀별 평행 좌표
team = bb2013$팀
# 팀별 평행 좌표
team = bb2013$팀
head(team)
parallel(~bb2013[, 4:11]|team.horizontal.axis=F, col1])
parallel(~bb2013[,4:11]|position.horizontal, axis=F, col1)
parallel(~bb2013[, 4:11]|team.horizontal, axis=F, col1])
parallel(~bb2013[, 4:11]|team.horizontal, axis=F, col1)
#3.
rownames(bb2013)=bb2013[, 1]
rownames(bb2013)
head(bb2013)
head(bb2013)
model=prcomp(bb2013[,4:11], scale=T)
plot(model)
summary(model)
biplot(model)
=======
out=lm(salary~experience+score,data=data)
summary(out)
plot(out)
summary(out)
backward=step(out,direction="backward",trace=FALSE)
summary(backward)
both=step(out,direction="both",trace=FALSE)
summary(both)
##All subset method
install.packages("leaps")
library(leaps)
leaps=regsubsets(rating~.,data=attitude,nbest=5)
summary(leaps)
plot(leaps,scale='bic')
out_bic=lm(rating~complaints,data=attitude)
summary(out_bic)
plot(leaps,scale='Cp')
out_cp=lm(rating~complaints+learning,data=attitude)
summary(out_cp)
plot(leaps,scale="adjr2")
out_adjr=lm(rating~complaints+learning+advance,data=attitude)
summary(out_adjr)
plot(leaps,scale='bic')
out_bic=lm(rating~complaints,data=attitude)
summary(out_bic)
plot(leaps,scale='Cp')
out_cp=lm(rating~complaints+learning,data=attitude)
summary(out_cp)
plot(leaps,scale="adjr2")
out_adjr=lm(rating~complaints+learning+advance,data=attitude)
>>>>>>> 9f4c339159e106f9b0322d8915e9e511b08406b0
